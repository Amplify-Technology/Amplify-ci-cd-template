name: Dotnet Reusable CI Build and Publish Template

on:
  workflow_call:
    inputs:
      projectRepo:
        required: true
        type: string
      projectPath:
        required: true
        type: string
      nuspecPath:
        required: true
        type: string
      AZURE_ARTIFACTS_PAT:
        required: true
        type: string
      GITHUB_REPO_PAT:
        required: true
        type: string
      SONAR_TOKEN:
        required: true
        type: string

    outputs:
      nupkgPath:
        description: "Path to generated .nupkg"
        value: ${{ jobs.build-and-publish.outputs.nupkgPath }}

permissions:
  id-token: write
  contents: read

jobs:
  build-and-publish:
    runs-on: windows-latest
    outputs:
      nupkgPath: ${{ steps.pack.outputs.packagePath }}

    env:
      BUILD_CONFIGURATION: Release
      DOTNET_VERSION: '8.0.x'
      NUGET_PACKAGE_PATH: amplifyNuget
      NUGET_FEED_NAME: ArtifactsForGitHubWorkflows
      AZURE_ARTIFACTS_PAT: ${{ inputs.AZURE_ARTIFACTS_PAT }}
      GITHUB_REPO_PAT: ${{ inputs.GITHUB_REPO_PAT }}
      SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}

    steps:
      - name: Checkout Project Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.projectRepo }}
          token: ${{ env.GITHUB_REPO_PAT }}
          path: project

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Read packageId and version from .nuspec
        id: nuspec
        shell: pwsh
        run: |
          [xml]$nuspec = Get-Content "project/${{ inputs.nuspecPath }}"
          $id = $nuspec.package.metadata.id
          $version = $nuspec.package.metadata.version
          echo "id=$id" >> $env:GITHUB_OUTPUT
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Set NuGet Feed URL and Stage from Branch
        id: stage
        shell: bash
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          echo "Branch is $BRANCH_NAME"

          if [[ "$BRANCH_NAME" == "dev" || "$BRANCH_NAME" == "main" ]]; then
            echo "NUGET_FEED_URL=https://pkgs.dev.azure.com/amplify-artifact-org/ArtifactsProjectStore/_packaging/ArtifactsForGitHubWorkflows/nuget/v3/index.json" >> $GITHUB_ENV
            echo "stage=Dev" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH_NAME" == "qa" ]]; then
            echo "NUGET_FEED_URL=https://your-qa-feed-url" >> $GITHUB_ENV
            echo "stage=QA" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH_NAME" == "prod" ]]; then
            echo "NUGET_FEED_URL=https://your-prod-feed-url" >> $GITHUB_ENV
            echo "stage=Prod" >> $GITHUB_OUTPUT
          else
            echo "Invalid or unsupported branch: $BRANCH_NAME"
            exit 1
          fi

      - name: Configure NuGet Source
        run: |
          nuget sources remove -Name ${{ env.NUGET_FEED_NAME }} || true
          nuget sources add -Name ${{ env.NUGET_FEED_NAME }} -Source "$env:NUGET_FEED_URL" -Username "kiyer@amppf.com" -Password "${{ env.AZURE_ARTIFACTS_PAT }}" -StorePasswordInClearText

      - name: Restore Packages
        run: dotnet restore "project/${{ inputs.projectPath }}" `
          --source "$env:NUGET_FEED_URL" `
          --source "https://api.nuget.org/v3/index.json"

      - name: Build Project
        run: dotnet build "project/${{ inputs.projectPath }}" --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: Pack NuGet Package
        id: pack
        shell: pwsh
        run: |
          $nuspecPath = "project/${{ inputs.nuspecPath }}"
          $outputDir = "${{ env.NUGET_PACKAGE_PATH }}"
          $version = "${{ steps.nuspec.outputs.version }}"

          nuget pack "$nuspecPath" -OutputDirectory "$outputDir" -Version "$version"

          $packagePath = Join-Path "$outputDir" "${{ steps.nuspec.outputs.id }}.$version.nupkg"
          echo "packagePath=$packagePath" >> $env:GITHUB_OUTPUT

      - name: Push Package to Azure Artifacts
        run: |
          nuget push "${{ steps.pack.outputs.packagePath }}" `
            -Source "$env:NUGET_FEED_URL" `
            -ApiKey AzureArtifacts `
            -Verbosity detailed
