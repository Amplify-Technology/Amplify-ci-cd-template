name: Dotnet Reusable CI Build and Publish Template (Sonar Only)

on:
  workflow_call:
    inputs:
      projectRepo:
        required: true
        type: string
      projectPath:
        required: true
        type: string
      AZURE_ARTIFACTS_PAT:
        required: true
        type: string
      GITHUB_REPO_PAT:
        required: true
        type: string
      SONAR_TOKEN:
        required: true
        type: string

    outputs:
      nupkgPath:
        description: "Path to generated .nupkg"
        value: ${{ jobs.build-and-publish.outputs.nupkgPath }}

permissions:
  id-token: write
  contents: read

jobs:
  build-and-publish:
    if: github.ref == 'refs/heads/main'
    runs-on: windows-latest
    outputs:
      nupkgPath: ${{ steps.pack.outputs.packagePath }}

    env:
      BUILD_CONFIGURATION: Release
      DOTNET_VERSION: '8.0.x'
      NUGET_PACKAGE_PATH: amplifyNuget
      NUGET_FEED_NAME: ArtifactsForGitHubWorkflows
      AZURE_ARTIFACTS_PAT: ${{ inputs.AZURE_ARTIFACTS_PAT }}
      GITHUB_REPO_PAT: ${{ inputs.GITHUB_REPO_PAT }}
      SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}

    steps:
      - name: Checkout Project Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.projectRepo }}
          token: ${{ env.GITHUB_REPO_PAT }}
          path: project

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Java 17 for Sonar
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install SonarQube Scanner
        shell: powershell
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Extract Project Key from .csproj
        id: project_info
        shell: pwsh
        run: |
          $csprojPath = "project/${{ inputs.projectPath }}"
          [xml]$proj = Get-Content $csprojPath
          $assemblyName = $proj.Project.PropertyGroup.AssemblyName
          if (-not $assemblyName) {
            $assemblyName = [System.IO.Path]::GetFileNameWithoutExtension($csprojPath)
          }
          echo "projectKey=$assemblyName" >> $env:GITHUB_OUTPUT

      - name: Set NuGet Feed URL
        shell: bash
        run: |
          echo "NUGET_FEED_URL=https://pkgs.dev.azure.com/amplify-artifact-org/ArtifactsProjectStore/_packaging/ArtifactsForGitHubWorkflows/nuget/v3/index.json" >> $GITHUB_ENV

      - name: Configure NuGet Source with PAT
        run: |
          nuget sources remove -Name ${{ env.NUGET_FEED_NAME }} || true
          nuget sources add -Name ${{ env.NUGET_FEED_NAME }} `
            -Source "$env:NUGET_FEED_URL" `
            -Username "anyuser" `
            -Password "${{ env.AZURE_ARTIFACTS_PAT }}" `
            -StorePasswordInClearText

      - name: Begin SonarQube Analysis
        shell: powershell
        run: |
          dotnet-sonarscanner begin `
            /k:"${{ steps.project_info.outputs.projectKey }}" `
            /d:sonar.token="${{ env.SONAR_TOKEN }}" `
            /d:sonar.host.url="http://amplify-platform-sonarqube.eastus.cloudapp.azure.com:9000" `
            /d:sonar.verbose=true

      - name: Restore Packages
        run: dotnet restore "project/${{ inputs.projectPath }}" `
          --source "$env:NUGET_FEED_URL" `
          --source "https://api.nuget.org/v3/index.json"

      - name: Build Project
        run: dotnet build "project/${{ inputs.projectPath }}" --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: End SonarQube Analysis
        shell: powershell
        run: dotnet-sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"
